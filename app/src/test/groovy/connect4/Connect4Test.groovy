/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package connect4

import connect4.model.Board
import connect4.model.Color
import connect4.model.Coordinate
import spock.lang.Specification

class Connect4Test extends Specification {
    def "connect4 in row"() {
        setup:
        def board = new Board()
            .fillCell(Color.BLACK, new Coordinate(0, 0))
            .fillCell(Color.BLACK, new Coordinate(0, 1))
            .fillCell(Color.BLACK, new Coordinate(0, 2))
            .fillCell(Color.BLACK, new Coordinate(0, 3))

        expect:
        board.isConnect4()
    }

    def "connect4 in column"() {
        setup:
        def board = new Board()
            .fillCell(Color.BLACK, new Coordinate(1, 0))
            .fillCell(Color.BLACK, new Coordinate(2, 0))
            .fillCell(Color.BLACK, new Coordinate(3, 0))
            .fillCell(Color.BLACK, new Coordinate(4, 0))

        expect:
        board.isConnect4()
    }

    def "connect4 in main diagonal"() {
        setup:
        def board = new Board()
            .fillCell(Color.BLACK, new Coordinate(0, 0))
            .fillCell(Color.BLACK, new Coordinate(1, 1))
            .fillCell(Color.BLACK, new Coordinate(2, 2))
            .fillCell(Color.BLACK, new Coordinate(3, 3))

        expect:
        board.isConnect4()
    }

    def "connect4 in inverse diagonal"() {
        setup:
        def board = new Board()
            .fillCell(Color.BLACK, new Coordinate(1, 3))
            .fillCell(Color.BLACK, new Coordinate(2, 2))
            .fillCell(Color.BLACK, new Coordinate(3, 1))
            .fillCell(Color.BLACK, new Coordinate(4, 0))

        expect:
        board.isConnect4()
    }
}